class Solution {
public:
    // 1 2 1
    // l = 1,r = 8 -> mid = 4
    // l = 5,r = 8 -> mid = 6
    // r = mid - 1;
    // l = 5,5 = 5

    #define ll long long
    static bool check(vector<int>&candies,ll k,int mid){
        ll res = 0;
        for(const auto &it : candies) res+=(it/mid);
        return res >= k;
    }
    int maximumCandies(vector<int>& candies, long long k) {
        ios_base::sync_with_stdio(false);
        cin.tie(nullptr);
        cout.tie(nullptr);
        ll tt = 0;
        for(const auto &it : candies){
            tt+=(ll)it;
        }
        if(tt<k) return 0;
        int l = 1,r = *max_element(candies.begin(),candies.end()),ans = 0;
        while(l<=r){    
            int mid = (r+l)>>1;
            if(check(candies,k,mid)){
                ans = mid;
                l = mid+1;
            }
            else{
                r = mid-1;
            }
        }
        return ans;
    }
};
