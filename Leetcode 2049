class Solution {
public:
    #define li long long
    #define fast() ios_base::sync_with_stdio(false);cin.tie(nullptr);cout.tie(nullptr);
    int root = -1;
    li f = 0,record = LLONG_MIN;
    li solve(unordered_map<int,vector<int>>&mp,int node,int n){
        li cnt = 0;
        li maxScore = 1;
        for(const auto &it : mp[node]){
            int tmp = solve(mp,it,n);
            cnt+=tmp;maxScore*=tmp;
        }
        if(node!=root) maxScore*=n-cnt-1;
        if(record<maxScore){
            record = maxScore;
            f = 1;
        }
        else if(maxScore==record) f++;
        return cnt+1;
    }
    int countHighestScoreNodes(vector<int>& parents) {
        fast();
        unordered_map<int,vector<int>>mp;
        mp.clear();
        int n = parents.size();
        for(int i=0;i<parents.size();++i){
            if(parents[i]!=-1){
                mp[parents[i]].push_back(i);
            }
            else root = i;
        }
        solve(mp,root,n);
        return f;
    }
};
