/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    #define ll long long
    long long kthLargestLevelSum(TreeNode* root, int k) {
        ios_base::sync_with_stdio(false);
        cin.tie(nullptr);
        cout.tie(nullptr);
        if(root==NULL) return -1;
        queue<TreeNode*>q;
        q.push(root);
        vector<ll>level;
        while(!q.empty()){
            int n = q.size();
            ll temp = 0;
            for(int i=0;i<n;i++){
                TreeNode *res = q.front();
                q.pop();
                temp+=res->val;
                if(res->left!=NULL) q.push(res->left);
                if(res->right!=NULL) q.push(res->right);
            }
            level.push_back(temp);
        }
        if(level.size() >= k){
            sort(level.begin(),level.end(),greater<ll>());
            return level[k-1];
        }
        return -1;
    }   
};
