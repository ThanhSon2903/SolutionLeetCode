// 3,1,4,3,2,2,4,3
// l = 0,r = 5 -> ans = 1;
// mp[l]-- -> mp[3] = 1
// l = 1,r = 5 -> not Pair
// l = 1,r = 6 -> ans = 2
// mp[l]-- -> mp[1] = 0;
// l = 2,r = 6 -> ans = 3;
// mp[l]-- -> mp[4] = 1;
// l=3,r = 6 -> notPair;
class Solution {
public:
    #define ll long long
    long long countGood(vector<int>& nums, int k) {
        ios_base::sync_with_stdio(false);
        cin.tie(nullptr);
        cout.tie(nullptr);
        unordered_map<ll,ll>mp;
        int l = 0,r = 0;
        ll ans = 0,p = 0;
        while(r<nums.size()){
            mp[nums[r]]++;
            p+=(mp[nums[r]]-1);
            while(p>=k&&l<r){
                ans+=nums.size()-r;//Tính xem khi bắt đầu từ l thì có bao nhiêu mảng con tốt
                mp[nums[l]]--;
                p-=mp[nums[l]];
                l++;
            }
            r++;
        }
        return ans;
    }
};

