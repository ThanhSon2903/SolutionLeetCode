class Solution {
public:
    #define endl '\n'
    //Using Dp topDown
    int countSquares(vector<vector<int>>& matrix) {
        ios_base::sync_with_stdio(false);
        cin.tie(nullptr);
        cout.tie(nullptr);
        int n = matrix.size(),m = matrix[0].size(),ans = 0;
        vector<vector<int>>dp(n+1,vector<int>(m+1,0));
        for(int i=1;i<n+1;i++){
            for(int j=1;j<m+1;j++){
                if(matrix[i-1][j-1]==0) dp[i][j] = 0;
                else{
                    dp[i][j] = min({dp[i-1][j-1],dp[i-1][j],dp[i][j-1]})+1;
                    ans+=dp[i][j];
                }
            }
        }
        return ans;
    }
};
