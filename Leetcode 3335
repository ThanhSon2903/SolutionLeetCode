class Solution {
public:
    const int mod = 1e9+7;
    int lengthAfterTransformations(string s, int t) {
        ios_base::sync_with_stdio(false);
        cin.tie(nullptr);
        cout.tie(nullptr);
        vector<int>cnt(26,0);
        for(auto &it : s) cnt[it-'a']++;
        for(int i=1;i<=t;++i){
            vector<int>n_cnt(26,0);
            for(int j=0;j<26;j++){
                if(j==25&&cnt[j]>0){
                    n_cnt[0] = (n_cnt[0] + cnt[j]) % mod;
                    n_cnt[1] = (n_cnt[1] + cnt[j]) % mod;
                }
                else{
                    if(j<25) n_cnt[j+1] = (n_cnt[j+1] + cnt[j]) % mod;
                }
            }
            cnt = n_cnt;
        }
        long temp = 0;
        for(auto it : cnt){
            if(it>0){
               temp = (temp+it)%mod; 
            }
        }
        return (int)temp;
    }
};
